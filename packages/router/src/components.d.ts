/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import {
  EventEmitter,
} from '@stencil/core';
import {
  MatchResults,
  RouteLinkClickEventDetail,
  TransitionOptions,
} from './components/interfaces';

declare global {

  namespace StencilComponents {
    interface ThRouteLink {
      'url': string;
    }
  }

  interface HTMLThRouteLinkElement extends StencilComponents.ThRouteLink, HTMLStencilElement {}

  var HTMLThRouteLinkElement: {
    prototype: HTMLThRouteLinkElement;
    new (): HTMLThRouteLinkElement;
  };
  interface HTMLElementTagNameMap {
    'th-route-link': HTMLThRouteLinkElement;
  }
  interface ElementTagNameMap {
    'th-route-link': HTMLThRouteLinkElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-route-link': JSXElements.ThRouteLinkAttributes;
    }
  }
  namespace JSXElements {
    export interface ThRouteLinkAttributes extends HTMLAttributes {
      'onRouteLinkClicked'?: (event: CustomEvent<RouteLinkClickEventDetail>) => void;
      'url'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface ThRoute {
      'component': string;
      'cssClass': string;
      'exact': boolean;
      'isActive': () => boolean;
      'isMatch': (pathname: string) => MatchResults;
      'setActive': (active: boolean) => void;
      'url': string;
    }
  }

  interface HTMLThRouteElement extends StencilComponents.ThRoute, HTMLStencilElement {}

  var HTMLThRouteElement: {
    prototype: HTMLThRouteElement;
    new (): HTMLThRouteElement;
  };
  interface HTMLElementTagNameMap {
    'th-route': HTMLThRouteElement;
  }
  interface ElementTagNameMap {
    'th-route': HTMLThRouteElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-route': JSXElements.ThRouteAttributes;
    }
  }
  namespace JSXElements {
    export interface ThRouteAttributes extends HTMLAttributes {
      'component'?: string;
      'cssClass'?: string;
      'exact'?: boolean;
      'url'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface ThRouter {
      'activateRoute': (newUrl: string, push: boolean) => Promise<any>;
    }
  }

  interface HTMLThRouterElement extends StencilComponents.ThRouter, HTMLStencilElement {}

  var HTMLThRouterElement: {
    prototype: HTMLThRouterElement;
    new (): HTMLThRouterElement;
  };
  interface HTMLElementTagNameMap {
    'th-router': HTMLThRouterElement;
  }
  interface ElementTagNameMap {
    'th-router': HTMLThRouterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'th-router': JSXElements.ThRouterAttributes;
    }
  }
  namespace JSXElements {
    export interface ThRouterAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;